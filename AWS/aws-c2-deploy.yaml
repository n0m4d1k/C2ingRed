---
- name: Create and configure AWS EC2 instance for C2 Server
  hosts: localhost
  gather_facts: false
  connection: local
  vars_files:
    - vars.yaml
  tasks:
    - name: Select a random AWS region
      set_fact:
        selected_aws_region: "{{ aws_region_choices | random }}"

    - name: Set AMI ID based on region
      set_fact:
        aws_ami: "{{ ami_map[selected_aws_region] }}"

    - name: Debug AWS Credentials
      debug:
        msg:
          - "Access Key: {{ aws_access_key }}"
          - "Secret Key: {{ aws_secret_key }}"
          - "Region: {{ selected_aws_region }}"
          - "AMI: {{ aws_ami }}"

    - name: Create an EC2 key pair
      amazon.aws.ec2_key:
        access_key: "{{ aws_access_key }}"
        secret_key: "{{ aws_secret_key }}"
        name: "{{ instance_label }}"
        region: "{{ selected_aws_region }}"
        state: present
      register: key_pair

    - name: Debug Key Pair
      debug:
        var: key_pair

    - name: Save private key locally
      copy:
        content: "{{ key_pair.key.private_key }}"
        dest: "~/.ssh/{{ instance_label }}.pem"
        mode: "0600"
      when: key_pair.changed
    #  no_log: true

    - name: Launch EC2 instance
      amazon.aws.ec2_instance:
        aws_access_key: "{{ aws_access_key | default(omit) }}"
        aws_secret_key: "{{ aws_secret_key | default(omit) }}"
        region: "{{ selected_aws_region }}"
        name: "{{ instance_label }}"
        image_id: "{{ aws_ami }}"
        instance_type: "{{ aws_instance_type }}"
        key_name: "{{ instance_label }}"
        security_groups:
          - "default"
        wait: yes
      register: ec2_instance

    - name: Wait for instance to be reachable
      wait_for:
        host: "{{ ec2_instance.public_ip }}"
        port: 22
        delay: 10
        timeout: 300
        state: started

    - name: Add EC2 instance to inventory
      add_host:
        name: "{{ instance_label }}"
        ansible_host: "{{ ec2_instance.public_ip }}"
        ansible_user: ec2-user
        ansible_ssh_private_key_file: "~/.ssh/{{ instance_label }}.pem"

- name: Secure and configure AWS EC2 server
  hosts: "{{ instance_label }}"
  gather_facts: true
  tasks:
    - name: Disable root password authentication for SSH immediately
      ansible.builtin.lineinfile:
        path: /etc/ssh/sshd_config
        regexp: '^#?PasswordAuthentication'
        line: 'PasswordAuthentication no'
        state: present

    - name: Restart SSH service
      ansible.builtin.service:
        name: ssh
        state: restarted

    - name: Update apt package list
      ansible.builtin.apt:
        update_cache: yes

    - name: Install base utilities and tools via apt
      ansible.builtin.apt:
        name:
          - git
          - wget
          - curl
          - unzip
          - python3-pip
          - python3-venv
          - tmux
          - pipx
          - nmap
          - tcpdump
          - hydra
          - john
          - hashcat
          - sqlmap
          - gobuster
          - dirb
          - enum4linux
          - dnsenum
          - seclists
          - responder
          - golang
          - proxychains
          - tor
          - crackmapexec
        state: present

    - name: Ensure pipx path is configured
      ansible.builtin.shell: |
        pipx ensurepath
      args:
        executable: /bin/bash

    - name: Install tools via pipx
      ansible.builtin.shell: |
        export PATH=$PATH:/root/.local/bin
        pipx ensurepath
        pipx install git+https://github.com/Pennyw0rth/NetExec
        pipx install git+https://github.com/blacklanternsecurity/TREVORspray
        pipx install impacket
      args:
        executable: /bin/bash

    - name: Download Kerbrute
      ansible.builtin.shell: |
        mkdir -p ~/Tools/Kerbrute
        wget https://github.com/ropnop/kerbrute/releases/latest/download/kerbrute_linux_amd64 -O ~/Tools/Kerbrute/kerbrute
        chmod +x ~/Tools/Kerbrute/kerbrute
      args:
        executable: /bin/bash

    - name: Clone SharpCollection nightly builds
      ansible.builtin.git:
        repo: https://github.com/Flangvik/SharpCollection.git
        dest: ~/Tools/SharpCollection
        version: master

    - name: Clone PEASS-ng
      ansible.builtin.git:
        repo: https://github.com/carlospolop/PEASS-ng.git
        dest: ~/Tools/PEASS-ng

    - name: Clone MailSniper
      ansible.builtin.git:
        repo: https://github.com/dafthack/MailSniper.git
        dest: ~/Tools/MailSniper

    - name: Clone Inveigh
      ansible.builtin.git:
        repo: https://github.com/Kevin-Robertson/Inveigh.git
        dest: ~/Tools/Inveigh

    - name: Install Sliver C2 server
      ansible.builtin.shell: |
        curl https://sliver.sh/install | sudo bash
        systemctl enable sliver
        systemctl start sliver

    - name: Install Metasploit Framework (Nightly Build)
      ansible.builtin.shell: |
        curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > ~/Tools/msfinstall
        chmod 755 ~/Tools/msfinstall
        ~/Tools/msfinstall
      args:
        executable: /bin/bash